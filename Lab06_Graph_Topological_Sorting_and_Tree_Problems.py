# -*- coding: utf-8 -*-
"""CSE221 LAB06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18U8oCXwZVIBQhGy0kStCQ3wKV1yl3XCb
"""

#task-1
n,m=map(int,input().split())
g=[]
for i in range(n+1):
 g.append([])
d=[]
for i in range(n+1):
 d.append(0)
for i in range(m):
 a,b=map(int,input().split())
 g[a].append(b)
 d[b]+=1
q=[]
for i in range(1,n+1):
 if d[i]==0:
  q.append(i)
r=[]
i=0
while i<len(q):
 x=q[i]
 i+=1
 r.append(x)
 for y in g[x]:
  d[y]-=1
  if d[y]==0:
   q.append(y)
if len(r)<n:
 print(-1)
else:
 print(*r)

#task-2
n,m=map(int,input().split())
g=[]
for i in range(n+1):
 g.append([])
for i in range(m):
 u,v=map(int,input().split())
 g[u].append(v)
 g[v].append(u)
v=[]
for i in range(n+1):
 v.append(-1)
a=0
for i in range(1,n+1):
 if v[i]==-1:
  s=[i]
  v[i]=0
  x=1
  y=0
  j=0
  while j<len(s):
   u=s[j]
   j+=1
   for k in g[u]:
    if v[k]==-1:
     v[k]=1-v[u]
     s.append(k)
     if v[k]==0:
      x+=1
     else:
      y+=1
  a+=max(x,y)
print(a)

#task-3
from collections import deque
n=int(input())
x1,y1,x2,y2=map(int,input().split())
m=[(-2,-1),(-1,-2),(1,-2),(2,-1),(2,1),(1,2),(-1,2),(-2,1)]
v=[[0]*n for _ in range(n)]
q=deque()
q.append((x1-1,y1-1,0))
v[x1-1][y1-1]=1
while q:
 x,y,c=q.popleft()
 if x==x2-1 and y==y2-1:
  print(c)
  exit()
 for dx,dy in m:
  a=x+dx
  b=y+dy
  if 0<=a<n and 0<=b<n and v[a][b]==0:
   v[a][b]=1
   q.append((a,b,c+1))
print(-1)

#task-4
n,r=map(int,input().split())
g=[[]for i in range(n+1)]
for j in range(n-1):
 u,v=map(int,input().split())
 g[u].append(v)
 g[v].append(u)
s=[0]*(n+1)
v=[0]*(n+1)
st=[(r,0)]
order=[]
while st:
 x,p=st.pop()
 if v[x]==0:
  v[x]=p
  order.append(x)
  for y in g[x]:
   if y!=p:
    st.append((y,x))
for x in reversed(order):
 s[x]=1
 for y in g[x]:
  if y!=v[x]:
   s[x]+=s[y]
q=int(input())
for _ in range(q):
 x=int(input())
 print(s[x])

#task-5
n=int(input())
g=[[]for _ in range(n+1)]
for _ in range(n-1):
 u,v=map(int,input().split())
 g[u].append(v)
 g[v].append(u)
def bfs(s):
 d=[-1]*(n+1)
 d[s]=0
 q=[s]
 for x in q:
  for y in g[x]:
   if d[y]==-1:
    d[y]=d[x]+1
    q.append(y)
 m=max(d)
 return d.index(m),m
a,_=bfs(1)
b,d=bfs(a)
print(d)
print(a,b)

#taask-6
n=int(input())
w=[input()for i in range(n)]
g=[set()for j in range(26)]
d=[0]*26
use=[0]*26
for i in range(n-1):
    a,b=w[i],w[i+1]
    if len(a)>len(b)and a.startswith(b):
        print(-1)
        exit()
    for x,y in zip(a,b):
        if x!=y:
            u,v=ord(x)-97,ord(y)-97
            if v not in g[u]:
                g[u].add(v)
                d[v]+=1
            break
for word in w:
    for c in word:
        use[ord(c)-97]=1
q=[i for i in range(26)if use[i]and d[i]==0]
q.sort()
res=[]
while q:
    u=q.pop(0)
    res.append(chr(u+97))
    for v in g[u]:
        d[v]-=1
        if d[v]==0:
            q.append(v)
        q.sort()
print(''.join(res)if len(res)==sum(use)else -1)



