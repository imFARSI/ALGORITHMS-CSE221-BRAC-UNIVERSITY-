# -*- coding: utf-8 -*-
"""CSE221 LAB 07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yB8hypz2ADLo8CH0LTdnOPz7dtn1F33p
"""

#TASK-1
n,m,s,d=map(int,input().split())
u=list(map(int,input().split()))
v=list(map(int,input().split()))
w=list(map(int,input().split()))
g=[[]for _ in range(n+1)]
for i in range(m):g[u[i]].append((v[i],w[i]))
dist=[10**18]*(n+1)
par=[-1]*(n+1)
vis=[0]*(n+1)
q=[]
q.append((0,s))
while q:
 i=0
 for j in range(1,len(q)):
  if q[j][0]<q[i][0]:i=j
 q[i],q[-1]=q[-1],q[i]
 x,y=q.pop()
 if vis[y]:continue
 vis[y]=1
 dist[y]=x
 for z,c in g[y]:
  if not vis[z]and x+c<dist[z]:
   dist[z]=x+c
   par[z]=y
   q.append((dist[z],z))
if dist[d]==10**18:print(-1)
else:
 print(dist[d])
 a=[]
 while d!=-1:
  a.append(d)
  d=par[d]
 print(*a[::-1])

#task-4
import heapq
n,m,s,d=map(int,input().split())
w=list(map(int,input().split()))
g={}
for i in range(m):
 a,b=map(int,input().split())
 if a not in g:g[a]=[]
 g[a].append(b)
v=[10**18]*(n+1)
v[s]=w[s-1]
h=[(v[s],s)]
while h:
 x,y=heapq.heappop(h)
 if x<=v[y]:
  if y in g:
   for z in g[y]:
    if v[y]+w[z-1]<v[z]:
     v[z]=v[y]+w[z-1]
     heapq.heappush(h,(v[z],z))
print(v[d]if v[d]<10**18else-1)

#task-2
import heapq
n,m,s,t=map(int,input().split())
g=[[]for i in range(n+1)]
for i in range(m):
 a,b,c=map(int,input().split())
 g[a].append((b,c))
def d(start):
 v=[10**18]*(n+1)
 v[start]=0
 h=[(0,start)]
 while h:
  x,y=heapq.heappop(h)
  if x<=v[y]:
   for z,w in g[y]:
    if v[y]+w<v[z]:
     v[z]=v[y]+w
     heapq.heappush(h,(v[z],z))
 return v
va=d(s)
vb=d(t)
r=10**18
u=-1
for i in range(1,n+1):
 x=max(va[i],vb[i])
 if x<r:r=x;u=i
if r<10**18:
 print(r,u)
else:
 print(-1)

#task-5
import heapq
n,m=map(int,input().split())
g=[[]for i in range(n+1)]
u=list(map(int,input().split()))
v=list(map(int,input().split()))
w=list(map(int,input().split()))
for i in range(m):
    g[u[i]].append((v[i],w[i]))
d=[[10**18]*2 for i in range(n+1)]
d[1][0]=0
d[1][1]=0
h=[(0,1,-1)]
while h:
    x,y,p=heapq.heappop(h)
    bad=False
    if p!=-1:
        if x>d[y][p%2]:
            bad=True
    if not bad:
        for z,w in g[y]:
            q=w%2
            if q!=p:
                if x+w<d[z][q]:
                    d[z][q]=x+w
                    heapq.heappush(h,(x+w,z,q))
a=min(d[n][0],d[n][1])
if a<10**18:
    print(a)
else:
    print(-1)

#task-6
import heapq
n,m,s,d=map(int,input().split())
g=[[]for i in range(n+1)]
for i in range(m):a,b,w=map(int,input().split());g[a].append((b,w));g[b].append((a,w))
dist=[[1e18,1e18]for _ in range(n+1)]
dist[s][0]=0
h=[(0,s)]
while h:
 c,u=heapq.heappop(h)
 for v,w in g[u]:
  nc=c+w
  if nc<dist[v][0]:
   dist[v][1]=dist[v][0]
   dist[v][0]=nc
   heapq.heappush(h,(nc,v))
  elif dist[v][0]<nc<dist[v][1]:
   dist[v][1]=nc
   heapq.heappush(h,(nc,v))
if dist[d][1]<1e18:print(dist[d][1])
else:print(-1)

#task -3
import heapq
n,m=map(int,input().split())
g=[[]for i in range(n+1)]
for i in range(m):
 a,b,w=map(int,input().split())
 g[a].append((b,w))
 g[b].append((a,w))
d=[1e9]*(n+1)
d[1]=0
h=[(0,1)]
while h:
 c,u=heapq.heappop(h)
 for v,w in g[u]:
  danger=max(c,w)
  if danger<d[v]:
   d[v]=danger
   heapq.heappush(h,(danger,v))
for i in range(1,n+1):
 if i==1:
  print(0,end=' ')
 elif d[i]==1e9:
  print(-1,end=' ')
 else:
  print(d[i],end=' ')
